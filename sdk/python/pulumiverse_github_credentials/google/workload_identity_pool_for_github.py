# coding=utf-8
# *** WARNING: this file was generated by Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
import pulumi_google_native

__all__ = ['WorkloadIdentityPoolForGithubArgs', 'WorkloadIdentityPoolForGithub']

@pulumi.input_type
class WorkloadIdentityPoolForGithubArgs:
    def __init__(__self__, *,
                 identity_pool_name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a WorkloadIdentityPoolForGithub resource.
        :param pulumi.Input[str] identity_pool_name: The name of the identity pool.
        """
        if identity_pool_name is not None:
            pulumi.set(__self__, "identity_pool_name", identity_pool_name)

    @property
    @pulumi.getter(name="identityPoolName")
    def identity_pool_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the identity pool.
        """
        return pulumi.get(self, "identity_pool_name")

    @identity_pool_name.setter
    def identity_pool_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_pool_name", value)


class WorkloadIdentityPoolForGithub(pulumi.ComponentResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 identity_pool_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a WorkloadIdentityPoolForGithub resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] identity_pool_name: The name of the identity pool.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[WorkloadIdentityPoolForGithubArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a WorkloadIdentityPoolForGithub resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param WorkloadIdentityPoolForGithubArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(WorkloadIdentityPoolForGithubArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 identity_pool_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is not None:
            raise ValueError('ComponentResource classes do not support opts.id')
        else:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = WorkloadIdentityPoolForGithubArgs.__new__(WorkloadIdentityPoolForGithubArgs)

            __props__.__dict__["identity_pool_name"] = identity_pool_name
            __props__.__dict__["identity_pool"] = None
        super(WorkloadIdentityPoolForGithub, __self__).__init__(
            'github-credentials:google:WorkloadIdentityPoolForGithub',
            resource_name,
            __props__,
            opts,
            remote=True)

    @property
    @pulumi.getter(name="identityPool")
    def identity_pool(self) -> pulumi.Output[Optional['pulumi_google_native.iam.v1.WorkloadIdentityPool']]:
        """
        The identity pool resource.
        """
        return pulumi.get(self, "identity_pool")

